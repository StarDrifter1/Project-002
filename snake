#StarDrifter1

import random
import curses

s = curses.initscr()
curses.curs_set(0)
sh, sw = s.getmaxyx()
w = curses.newwin(sh, sw, 0, 0)
w.keypad(1)
w.timeout(100)

#set initial positon sw=screen width/4 = snk(x), same for snak(y)
snk_x = sw/4
snk_y = sh/2
#below is snake body parts, numbers denoting position relative to head (snk_y/x)
snake = [
    [snk_y, snk_x],
    [snk_y, snk_x-1],
    [snk_y, snk_x-2],
]

food = [sh/2, sw/2]
w.addch(food[0], food[1], curses.ACS_PI)
#food centered here, and pi so it will be circular.

key = curses.KEY_RIGHT
#key tells initial movement for snake to right.

#infinite loop for snake movement, either nothing or next key is the output.
while True
    next_key = w.getch
    key = key if next_key == -1 else next_key

    if snake[0][0] in [0,sh] or snake[0][1] in [0,sw] or snake[0] in snake[1:]:
        curses.endwin()
        quit()

    new_head = [snake[0][0], snake[0][1]]

    if key == curses.KEY_DOWN:
        new_head[0] +=1
    if key == curses.KEY_UP:
        new_head[0] -=1
    if key == curses.KEY_LEFT:
        new_head[1] -=1
    if key == curses.KEY_RIGHT:
        new_head[1] +=1

    snake.insert(0, new head)

    if snake[0] == food:
        food = none
#creates new food for snake
        while food is none:
            nf = [
                random.randit(1, sh-1)
                random.randit(1, sw-1)
            ]
            food = nf if nf not in snake else None
#if none, loop is redone. once foods been selected, we add the new one - next line makes this happen)
        w.addch(food[0], food[1], curses.ACS.PI)
    else:   
        tail = snake.pop()
        w.addch(tail[0],tail[1], ' ')
#adds space in place of the tail piece.

    
    w.addch(snake[0][0], snake[0][1], curses.ACS_CKBOARD)
#adds head of snake to screen using ACS_CKBOARD.














